# -*- coding: utf-8 -*-
"""DialoGPT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V3qOH75JkPr2ljkeO7wXzBMwtzBfsXea
"""

import pandas as pd
import re
from transformers import AutoModelForCausalLM, AutoTokenizer
import torch

# Load DialoGPT (Medium)
model_name = "microsoft/DialoGPT-medium"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(model_name)

# Load the CSV file
dataset_path = "chit_chat.csv"
df = pd.read_csv(dataset_path)

# Apply the function to extract and clean first user prompts
user_prompts = df['content']

# Function to generate responses using DialoGPT
def generate_response_dialo(prompt, max_length=100):
    input_ids = tokenizer.encode(prompt + tokenizer.eos_token, return_tensors="pt")

    # Generate response
    outputs = model.generate(
        input_ids,
        max_length=max_length,
        pad_token_id=tokenizer.eos_token_id,
        temperature=0.8,        # Adjust for more creativity
        top_k=50,               # Top-k sampling
        top_p=0.85,             # Nucleus sampling
        repetition_penalty=1.2,  # Increase penalty to avoid repetition
        do_sample=True
    )

    # Decode and clean the response
    response = tokenizer.decode(outputs[:, input_ids.shape[-1]:][0], skip_special_tokens=True)
    return response

# List to store results
dialo_responses = []

# Loop through each user prompt and generate a response
for prompt in user_prompts:
    response = generate_response_dialo(prompt)
    dialo_responses.append(response)

# Save the prompts and responses to a CSV file
evaluation_data = pd.DataFrame({
    'Prompt': user_prompts,
    'Response': dialo_responses
})

evaluation_data

# prompt: save evaluation data in csv file

# Define the filename to save the evaluation data
output_filename = "dialogpt_responses.csv"

# Save the DataFrame to a CSV file
evaluation_data.to_csv(output_filename, index=False)

print(f"Evaluation data saved to {output_filename}")